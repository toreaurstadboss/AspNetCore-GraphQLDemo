<h2>Highest mountains in Norwegian muncipialities</h2>
<p>Dynamic data and dynamic table retrieved using Apollo client and GraphQL</p>

<p>Enter GraphQL query below</p>

<style type="text/css">
    .btn {
        margin: 10px;
    }
</style>

<div class="row" style="padding:10px">
    <textarea id="GraphQLQuery" style="height:250px" class="col-md-6 form-control"></textarea>
    <button id="btnLoadData" class="btn btn-success col-md-2"><i class="fa-cloud-download fa"></i>&nbsp;Load data</button>
    <button id="btnConnect" class="btn btn-info col-md-2"><i class="fa-connectdevelop fa"></i>&nbsp;Connect demo</button>

</div>

<table id="mountainsTable" class="table table-striped table-hover table-dark">
    <thead>
        <tr id="mountainsTableHeaderRow"></tr>
    <tbody id="mountainsTableBody"></tbody>
    </thead>
</table>

<script>

    function LoadGraphQLDataIntoUi(result) {

        var tableBody = $("#mountainsTableBody");
        tableBody.empty();

        var tableHeaderRow = $("#mountainsTableHeaderRow");
        tableHeaderRow.empty();

        var rowIndex = 0;

        result.data.mountains.forEach(mountain => {

            if (rowIndex == 0) {
                Object.keys(mountain).forEach(key => {
                    if (key === '__typename') {
                        return;
                    }
                    tableHeaderRow.append(`<th>${key}</th>`);
                });;
            }

            tableBody.append('<tr>');

            Object.keys(mountain).forEach(key => {
                if (key === '__typename') {
                    return;
                }
                if (key === 'id') {
                    tableBody.append(`<td><a href='/home/mountaindetails/?id=${mountain[key]}'><i class='fa fa-arrow-right'></i></a> ${mountain[key]}</td>`);
                    return;
                }
                tableBody.append(`<td>${mountain[key]}</td>`);

            });

            tableBody.append('</tr>');

            rowIndex++;

        });

        toastr.success('Loaded GraphQL data from server into the UI successfully.');


    }


    $("#btnLoadData").click(function () {
        var gqlQueryContents = $("#GraphQLQuery").val();
        LoadGraphQLData(gqlQueryContents, LoadGraphQLDataIntoUi);
        toastr.info('Retrieving data from API using GraphQL.');
    });

    $(document).ready(function () {

        console.log('loading');

        var initialQuery = `
                {
                    mountains {
                        id
                        fylke: county
                        kommune: muncipiality
                        hoydeOverHavet: calculatedMetresAboveSeaLevel
                        offisieltNavn: officialName
                        primaerfaktor: calculatedPrimaryFactor
                        referansePunkt: referencePoint
                    }
                }`;

        $("#GraphQLQuery").val(initialQuery);

    });

</script>
